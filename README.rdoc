= DoesPrettyURLs

Uses ActiveRecord to_param to force your individual models to have attractive, slug-like, and more
SEO-friendly URLs.


== Installation

Do the usual, of course:

  gem install doesprettyurls

And add a gem dependency to your Gemfile:

  gem "doesprettyurls", ">=0.1.0"


== Example Usage

To add pretty URL support for objects of a given model, declare your desire for fanciness within the
ActiveRecord model:

  doesprettyurls
  
This will, by default, surgically attach a "slug"-ified version of your object's :name attribute to the
objects id in URLs and for finders. This means where you used to have this:

  # tag = <Tag @id=5, @name="Beer and Brats", @title="Something Really Cool"...>
  http://myrailsproject.com/tags/5
  
You would now have something a bit fancier and search engine friendly like this:

  http://myrailsproject.com/tags/5-beer-and-brats
  
You can tell the doesprettyurls invocation to use a different field for slugification, too. Just pass it
along in your method call:

  doesprettyurls :attribute=>:title
  
For the same object object, you'd now see this URL used in your site:

  http://myrailsproject.com/tags/5-something-really-cool

Voila! Se Magnifique!


== Use a Proc for Beauitification

You also have the option of passing a Proc to the doesprettyurls declaration. This is useful if you want the
URL for each object of a certain class to be decision-based or otherwise constructed. The format for massaging
a Proc-based parameter goes something like this:

  doesprettyurls :proc=>Proc.new {|tag| tag.shortname ? tag.shortname : tag.name }
  
The Proc is called during each request to to_param, so it is useful if realtime URL-id'ing is desired, though
the merits of always-changing URL components for the same object are debatable :-)

The to_param Proc you supply should act on an instance of the object, which is passed to it on execution (as
the Tag in the example).



== Copyright

Copyright (c) 2011 Awexome Labs, LLC. http://awexomelabs.com/

